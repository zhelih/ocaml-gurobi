open Ctypes

module Stubs(F : Cstubs.FOREIGN) =
struct

open F

type grb_Env
let grb_Env : grb_Env structure typ = structure "_GRBenv"
type grb_Model
let grb_Model : grb_Model structure typ = structure "_GRBmodel"
type grb_Batch
let grb_Batch : grb_Batch structure typ = structure "_GRBbatch"

let getattrinfo = foreign "GRBgetattrinfo" (ptr grb_Model @-> string @-> ptr int @-> ptr int @-> ptr int @-> returning int)
let isattravailable = foreign "GRBisattravailable" (ptr grb_Model @-> string @-> returning int)
let getintattr = foreign "GRBgetintattr" (ptr grb_Model @-> string @-> ptr int @-> returning int)
let setintattr = foreign "GRBsetintattr" (ptr grb_Model @-> string @-> int @-> returning int)
let getintattrelement = foreign "GRBgetintattrelement" (ptr grb_Model @-> string @-> int @-> ptr int @-> returning int)
let setintattrelement = foreign "GRBsetintattrelement" (ptr grb_Model @-> string @-> int @-> int @-> returning int)
let getintattrarray = foreign "GRBgetintattrarray" (ptr grb_Model @-> string @-> int @-> int @-> ptr int @-> returning int)
let setintattrarray = foreign "GRBsetintattrarray" (ptr grb_Model @-> string @-> int @-> int @-> ptr int @-> returning int)
let getintattrlist = foreign "GRBgetintattrlist" (ptr grb_Model @-> string @-> int @-> ptr int @-> ptr int @-> returning int)
let setintattrlist = foreign "GRBsetintattrlist" (ptr grb_Model @-> string @-> int @-> ptr int @-> ptr int @-> returning int)
let getcharattrelement = foreign "GRBgetcharattrelement" (ptr grb_Model @-> string @-> int @-> string @-> returning int)
let setcharattrelement = foreign "GRBsetcharattrelement" (ptr grb_Model @-> string @-> int @-> char @-> returning int)
let getcharattrarray = foreign "GRBgetcharattrarray" (ptr grb_Model @-> string @-> int @-> int @-> string @-> returning int)
let setcharattrarray = foreign "GRBsetcharattrarray" (ptr grb_Model @-> string @-> int @-> int @-> string @-> returning int)
let getcharattrlist = foreign "GRBgetcharattrlist" (ptr grb_Model @-> string @-> int @-> ptr int @-> string @-> returning int)
let setcharattrlist = foreign "GRBsetcharattrlist" (ptr grb_Model @-> string @-> int @-> ptr int @-> string @-> returning int)
let getdblattr = foreign "GRBgetdblattr" (ptr grb_Model @-> string @-> ptr double @-> returning int)
let setdblattr = foreign "GRBsetdblattr" (ptr grb_Model @-> string @-> double @-> returning int)
let getdblattrelement = foreign "GRBgetdblattrelement" (ptr grb_Model @-> string @-> int @-> ptr double @-> returning int)
let setdblattrelement = foreign "GRBsetdblattrelement" (ptr grb_Model @-> string @-> int @-> double @-> returning int)
let getdblattrarray = foreign "GRBgetdblattrarray" (ptr grb_Model @-> string @-> int @-> int @-> ptr double @-> returning int)
let setdblattrarray = foreign "GRBsetdblattrarray" (ptr grb_Model @-> string @-> int @-> int @-> ptr double @-> returning int)
let getdblattrlist = foreign "GRBgetdblattrlist" (ptr grb_Model @-> string @-> int @-> ptr int @-> ptr double @-> returning int)
let setdblattrlist = foreign "GRBsetdblattrlist" (ptr grb_Model @-> string @-> int @-> ptr int @-> ptr double @-> returning int)
let getstrattr = foreign "GRBgetstrattr" (ptr grb_Model @-> string @-> ptr string @-> returning int)
let setstrattr = foreign "GRBsetstrattr" (ptr grb_Model @-> string @-> string @-> returning int)
let getstrattrelement = foreign "GRBgetstrattrelement" (ptr grb_Model @-> string @-> int @-> ptr string @-> returning int)
let setstrattrelement = foreign "GRBsetstrattrelement" (ptr grb_Model @-> string @-> int @-> string @-> returning int)
let getstrattrarray = foreign "GRBgetstrattrarray" (ptr grb_Model @-> string @-> int @-> int @-> ptr string @-> returning int)
let setstrattrarray = foreign "GRBsetstrattrarray" (ptr grb_Model @-> string @-> int @-> int @-> ptr string @-> returning int)
let getstrattrlist = foreign "GRBgetstrattrlist" (ptr grb_Model @-> string @-> int @-> ptr int @-> ptr string @-> returning int)
let setstrattrlist = foreign "GRBsetstrattrlist" (ptr grb_Model @-> string @-> int @-> ptr int @-> ptr string @-> returning int)
let cbget = foreign "GRBcbget" (ptr void @-> int @-> int @-> ptr void @-> returning int)
let cbsetparam = foreign "GRBcbsetparam" (ptr void @-> string @-> string @-> returning int)
let getcoeff = foreign "GRBgetcoeff" (ptr grb_Model @-> int @-> int @-> ptr double @-> returning int)
let getconstrs = foreign "GRBgetconstrs" (ptr grb_Model @-> ptr int @-> ptr int @-> ptr int @-> ptr double @-> int @-> int @-> returning int)
let getvars = foreign "GRBgetvars" (ptr grb_Model @-> ptr int @-> ptr int @-> ptr int @-> ptr double @-> int @-> int @-> returning int)
let getsos = foreign "GRBgetsos" (ptr grb_Model @-> ptr int @-> ptr int @-> ptr int @-> ptr int @-> ptr double @-> int @-> int @-> returning int)
let getgenconstrMax = foreign "GRBgetgenconstrMax" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> ptr int @-> ptr double @-> returning int)
let getgenconstrMin = foreign "GRBgetgenconstrMin" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> ptr int @-> ptr double @-> returning int)
let getgenconstrAbs = foreign "GRBgetgenconstrAbs" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> returning int)
let getgenconstrAnd = foreign "GRBgetgenconstrAnd" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> ptr int @-> returning int)
let getgenconstrOr = foreign "GRBgetgenconstrOr" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> ptr int @-> returning int)
let getgenconstrIndicator = foreign "GRBgetgenconstrIndicator" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> ptr int @-> ptr int @-> ptr double @-> string @-> ptr double @-> returning int)
let getgenconstrPWL = foreign "GRBgetgenconstrPWL" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> ptr int @-> ptr double @-> ptr double @-> returning int)
let getgenconstrPoly = foreign "GRBgetgenconstrPoly" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> ptr int @-> ptr double @-> returning int)
let getgenconstrExpA = foreign "GRBgetgenconstrExpA" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> ptr double @-> returning int)
let getgenconstrLogA = foreign "GRBgetgenconstrLogA" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> ptr double @-> returning int)
let getgenconstrPow = foreign "GRBgetgenconstrPow" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> ptr double @-> returning int)
let getgenconstrExp = foreign "GRBgetgenconstrExp" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> returning int)
let getgenconstrLog = foreign "GRBgetgenconstrLog" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> returning int)
let getgenconstrSin = foreign "GRBgetgenconstrSin" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> returning int)
let getgenconstrCos = foreign "GRBgetgenconstrCos" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> returning int)
let getgenconstrTan = foreign "GRBgetgenconstrTan" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> returning int)
let getq = foreign "GRBgetq" (ptr grb_Model @-> ptr int @-> ptr int @-> ptr int @-> ptr double @-> returning int)
let getqconstr = foreign "GRBgetqconstr" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> ptr double @-> ptr int @-> ptr int @-> ptr int @-> ptr double @-> returning int)
let getvarbyname = foreign "GRBgetvarbyname" (ptr grb_Model @-> string @-> ptr int @-> returning int)
let getconstrbyname = foreign "GRBgetconstrbyname" (ptr grb_Model @-> string @-> ptr int @-> returning int)
let getqconstrbyname = foreign "GRBgetqconstrbyname" (ptr grb_Model @-> string @-> ptr int @-> returning int)
let getpwlobj = foreign "GRBgetpwlobj" (ptr grb_Model @-> int @-> ptr int @-> ptr double @-> ptr double @-> returning int)
let optimize = foreign "GRBoptimize" (ptr grb_Model @-> returning int)
let optimizeasync = foreign "GRBoptimizeasync" (ptr grb_Model @-> returning int)
let optimizebatch = foreign "GRBoptimizebatch" (ptr grb_Model @-> string @-> returning int)
let fixmodel = foreign "GRBfixmodel" (ptr grb_Model @-> ptr (ptr grb_Model) @-> returning int)
let feasrelax = foreign "GRBfeasrelax" (ptr grb_Model @-> int @-> int @-> ptr double @-> ptr double @-> ptr double @-> ptr double @-> returning int)
let singlescenariomodel = foreign "GRBsinglescenariomodel" (ptr grb_Model @-> ptr (ptr grb_Model) @-> returning int)
let getcbwhatinfo = foreign "GRBgetcbwhatinfo" (ptr void @-> int @-> ptr int @-> ptr int @-> returning int)
let relaxmodel = foreign "GRBrelaxmodel" (ptr grb_Model @-> ptr (ptr grb_Model) @-> returning int)
let converttofixed = foreign "GRBconverttofixed" (ptr grb_Model @-> returning int)
let presolvemodel = foreign "GRBpresolvemodel" (ptr grb_Model @-> ptr (ptr grb_Model) @-> returning int)
let iismodel = foreign "GRBiismodel" (ptr grb_Model @-> ptr (ptr grb_Model) @-> returning int)
let feasibility = foreign "GRBfeasibility" (ptr grb_Model @-> ptr (ptr grb_Model) @-> returning int)
let linearizemodel = foreign "GRBlinearizemodel" (ptr grb_Model @-> ptr (ptr grb_Model) @-> returning int)
let resultmodel = foreign "GRBresultmodel" (ptr grb_Model @-> string @-> ptr (ptr grb_Model) @-> returning int)
let readmodel = foreign "GRBreadmodel" (ptr grb_Env @-> string @-> ptr (ptr grb_Model) @-> returning int)
let read = foreign "GRBread" (ptr grb_Model @-> string @-> returning int)
let write = foreign "GRBwrite" (ptr grb_Model @-> string @-> returning int)
let ismodelfile = foreign "GRBismodelfile" (string @-> returning int)
let isattrfile = foreign "GRBisattrfile" (string @-> returning int)
let filetype = foreign "GRBfiletype" (string @-> returning int)
let isrecordfile = foreign "GRBisrecordfile" (string @-> returning int)
let getjsonsolution = foreign "GRBgetjsonsolution" (ptr grb_Model @-> ptr string @-> returning int)
let loadjson = foreign "GRBloadjson" (ptr grb_Env @-> string @-> ptr string @-> returning int)
let newmodel = foreign "GRBnewmodel" (ptr grb_Env @-> ptr (ptr grb_Model) @-> string @-> int @-> ptr double @-> ptr double @-> ptr double @-> string @-> ptr string @-> returning int)
let loadmodel = foreign "GRBloadmodel" (ptr grb_Env @-> ptr (ptr grb_Model) @-> string @-> int @-> int @-> int @-> double @-> ptr double @-> string @-> ptr double @-> ptr int @-> ptr int @-> ptr int @-> ptr double @-> ptr double @-> ptr double @-> string @-> ptr string @-> ptr string @-> returning int)
let addvar = foreign "GRBaddvar" (ptr grb_Model @-> int @-> ptr int @-> ptr double @-> double @-> double @-> double @-> char @-> string @-> returning int)
let addvars = foreign "GRBaddvars" (ptr grb_Model @-> int @-> int @-> ptr int @-> ptr int @-> ptr double @-> ptr double @-> ptr double @-> ptr double @-> string @-> ptr string @-> returning int)
let addconstr = foreign "GRBaddconstr" (ptr grb_Model @-> int @-> ptr int @-> ptr double @-> char @-> double @-> string @-> returning int)
let addconstrs = foreign "GRBaddconstrs" (ptr grb_Model @-> int @-> int @-> ptr int @-> ptr int @-> ptr double @-> string @-> ptr double @-> ptr string @-> returning int)
let addrangeconstr = foreign "GRBaddrangeconstr" (ptr grb_Model @-> int @-> ptr int @-> ptr double @-> double @-> double @-> string @-> returning int)
let addrangeconstrs = foreign "GRBaddrangeconstrs" (ptr grb_Model @-> int @-> int @-> ptr int @-> ptr int @-> ptr double @-> ptr double @-> ptr double @-> ptr string @-> returning int)
let addsos = foreign "GRBaddsos" (ptr grb_Model @-> int @-> int @-> ptr int @-> ptr int @-> ptr int @-> ptr double @-> returning int)
let addgenconstrAbs = foreign "GRBaddgenconstrAbs" (ptr grb_Model @-> string @-> int @-> int @-> returning int)
let addgenconstrExpA = foreign "GRBaddgenconstrExpA" (ptr grb_Model @-> string @-> int @-> int @-> double @-> string @-> returning int)
let addgenconstrLogA = foreign "GRBaddgenconstrLogA" (ptr grb_Model @-> string @-> int @-> int @-> double @-> string @-> returning int)
let addgenconstrPow = foreign "GRBaddgenconstrPow" (ptr grb_Model @-> string @-> int @-> int @-> double @-> string @-> returning int)
let addgenconstrExp = foreign "GRBaddgenconstrExp" (ptr grb_Model @-> string @-> int @-> int @-> string @-> returning int)
let addgenconstrLog = foreign "GRBaddgenconstrLog" (ptr grb_Model @-> string @-> int @-> int @-> string @-> returning int)
let addgenconstrSin = foreign "GRBaddgenconstrSin" (ptr grb_Model @-> string @-> int @-> int @-> string @-> returning int)
let addgenconstrCos = foreign "GRBaddgenconstrCos" (ptr grb_Model @-> string @-> int @-> int @-> string @-> returning int)
let addgenconstrTan = foreign "GRBaddgenconstrTan" (ptr grb_Model @-> string @-> int @-> int @-> string @-> returning int)
let addqconstr = foreign "GRBaddqconstr" (ptr grb_Model @-> int @-> ptr int @-> ptr double @-> int @-> ptr int @-> ptr int @-> ptr double @-> char @-> double @-> string @-> returning int)
let addcone = foreign "GRBaddcone" (ptr grb_Model @-> int @-> ptr int @-> returning int)
let addqpterms = foreign "GRBaddqpterms" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> ptr double @-> returning int)
let delvars = foreign "GRBdelvars" (ptr grb_Model @-> int @-> ptr int @-> returning int)
let delconstrs = foreign "GRBdelconstrs" (ptr grb_Model @-> int @-> ptr int @-> returning int)
let delsos = foreign "GRBdelsos" (ptr grb_Model @-> int @-> ptr int @-> returning int)
let delgenconstrs = foreign "GRBdelgenconstrs" (ptr grb_Model @-> int @-> ptr int @-> returning int)
let delqconstrs = foreign "GRBdelqconstrs" (ptr grb_Model @-> int @-> ptr int @-> returning int)
let delq = foreign "GRBdelq" (ptr grb_Model @-> returning int)
let chgcoeffs = foreign "GRBchgcoeffs" (ptr grb_Model @-> int @-> ptr int @-> ptr int @-> ptr double @-> returning int)
let setpwlobj = foreign "GRBsetpwlobj" (ptr grb_Model @-> int @-> int @-> ptr double @-> ptr double @-> returning int)
let updatemodel = foreign "GRBupdatemodel" (ptr grb_Model @-> returning int)
let reset = foreign "GRBreset" (ptr grb_Model @-> int @-> returning int)
let resetmodel = foreign "GRBresetmodel" (ptr grb_Model @-> returning int)
let freemodel = foreign "GRBfreemodel" (ptr grb_Model @-> returning int)
let computeIIS = foreign "GRBcomputeIIS" (ptr grb_Model @-> returning int)
let getBasisHead = foreign "GRBgetBasisHead" (ptr grb_Model @-> ptr int @-> returning int)
let cbstoponemultiobj = foreign "GRBcbstoponemultiobj" (ptr grb_Model @-> ptr void @-> int @-> returning int)
let strongbranch = foreign "GRBstrongbranch" (ptr grb_Model @-> int @-> ptr int @-> ptr double @-> ptr double @-> ptr int @-> returning int)
let checkmodel = foreign "GRBcheckmodel" (ptr grb_Model @-> returning int)
let setsignal = foreign "GRBsetsignal" (ptr grb_Model @-> returning void)
let terminate = foreign "GRBterminate" (ptr grb_Model @-> returning void)
let replay = foreign "GRBreplay" (string @-> returning int)
let setobjective = foreign "GRBsetobjective" (ptr grb_Model @-> int @-> double @-> int @-> ptr int @-> ptr double @-> int @-> ptr int @-> ptr int @-> ptr double @-> returning int)
let setobjectiven = foreign "GRBsetobjectiven" (ptr grb_Model @-> int @-> int @-> double @-> double @-> double @-> string @-> double @-> int @-> ptr int @-> ptr double @-> returning int)
let clean2 = foreign "GRBclean2" (ptr int @-> ptr int @-> ptr double @-> returning void)
let clean3 = foreign "GRBclean3" (ptr int @-> ptr int @-> ptr int @-> ptr double @-> returning void)
let msg = foreign "GRBmsg" (ptr grb_Env @-> string @-> returning void)
let getintparam = foreign "GRBgetintparam" (ptr grb_Env @-> string @-> ptr int @-> returning int)
let getdblparam = foreign "GRBgetdblparam" (ptr grb_Env @-> string @-> ptr double @-> returning int)
let getstrparam = foreign "GRBgetstrparam" (ptr grb_Env @-> string @-> string @-> returning int)
let getlongstrparam = foreign "GRBgetlongstrparam" (ptr grb_Env @-> string @-> string @-> int @-> ptr int @-> returning int)
let getintparaminfo = foreign "GRBgetintparaminfo" (ptr grb_Env @-> string @-> ptr int @-> ptr int @-> ptr int @-> ptr int @-> returning int)
let getdblparaminfo = foreign "GRBgetdblparaminfo" (ptr grb_Env @-> string @-> ptr double @-> ptr double @-> ptr double @-> ptr double @-> returning int)
let getstrparaminfo = foreign "GRBgetstrparaminfo" (ptr grb_Env @-> string @-> string @-> string @-> returning int)
let setparam = foreign "GRBsetparam" (ptr grb_Env @-> string @-> string @-> returning int)
let setintparam = foreign "GRBsetintparam" (ptr grb_Env @-> string @-> int @-> returning int)
let setdblparam = foreign "GRBsetdblparam" (ptr grb_Env @-> string @-> double @-> returning int)
let setstrparam = foreign "GRBsetstrparam" (ptr grb_Env @-> string @-> string @-> returning int)
let getparamtype = foreign "GRBgetparamtype" (ptr grb_Env @-> string @-> returning int)
let resetparams = foreign "GRBresetparams" (ptr grb_Env @-> returning int)
let copyparams = foreign "GRBcopyparams" (ptr grb_Env @-> ptr grb_Env @-> returning int)
let writeparams = foreign "GRBwriteparams" (ptr grb_Env @-> string @-> returning int)
let readparams = foreign "GRBreadparams" (ptr grb_Env @-> string @-> returning int)
let getnumparams = foreign "GRBgetnumparams" (ptr grb_Env @-> returning int)
let getparamname = foreign "GRBgetparamname" (ptr grb_Env @-> int @-> ptr string @-> returning int)
let getnumattributes = foreign "GRBgetnumattributes" (ptr grb_Model @-> returning int)
let getattrname = foreign "GRBgetattrname" (ptr grb_Model @-> int @-> ptr string @-> returning int)
let loadenv = foreign "GRBloadenv" (ptr (ptr grb_Env) @-> string @-> returning int)
let emptyenv = foreign "GRBemptyenv" (ptr (ptr grb_Env) @-> returning int)
let startenv = foreign "GRBstartenv" (ptr grb_Env @-> returning int)
let loadclientenv = foreign "GRBloadclientenv" (ptr (ptr grb_Env) @-> string @-> string @-> string @-> string @-> string @-> int @-> int @-> double @-> returning int)
let loadcloudenv = foreign "GRBloadcloudenv" (ptr (ptr grb_Env) @-> string @-> string @-> string @-> string @-> int @-> returning int)
let discardconcurrentenvs = foreign "GRBdiscardconcurrentenvs" (ptr grb_Model @-> returning void)
let discardmultiobjenvs = foreign "GRBdiscardmultiobjenvs" (ptr grb_Model @-> returning void)
let discardtuneenvs = foreign "GRBdiscardtuneenvs" (ptr grb_Model @-> returning void)
let releaselicense = foreign "GRBreleaselicense" (ptr grb_Env @-> returning void)
let freeenv = foreign "GRBfreeenv" (ptr grb_Env @-> returning void)
let geterrormsg = foreign "GRBgeterrormsg" (ptr grb_Env @-> returning string)
let getmerrormsg = foreign "GRBgetmerrormsg" (ptr grb_Model @-> returning string)
let getcommstats = foreign "GRBgetcommstats" (ptr grb_Env @-> ptr double @-> ptr double @-> ptr double @-> ptr double @-> ptr double @-> ptr double @-> returning void)
let version = foreign "GRBversion" (ptr int @-> ptr int @-> ptr int @-> returning void)
let tunemodel = foreign "GRBtunemodel" (ptr grb_Model @-> returning int)
let tunemodels = foreign "GRBtunemodels" (int @-> ptr (ptr grb_Model) @-> ptr grb_Model @-> returning int)
let gettuneresult = foreign "GRBgettuneresult" (ptr grb_Model @-> int @-> returning int)
let gettunelog = foreign "GRBgettunelog" (ptr grb_Model @-> int @-> ptr string @-> returning int)
let tunemodeladv = foreign "GRBtunemodeladv" (ptr grb_Model @-> ptr grb_Model @-> returning int)
let abortbatch = foreign "GRBabortbatch" (ptr grb_Batch @-> returning int)
let discardbatch = foreign "GRBdiscardbatch" (ptr grb_Batch @-> returning int)
let retrybatch = foreign "GRBretrybatch" (ptr grb_Batch @-> returning int)
let freebatch = foreign "GRBfreebatch" (ptr grb_Batch @-> returning int)
let getbatch = foreign "GRBgetbatch" (ptr grb_Env @-> string @-> ptr (ptr grb_Batch) @-> returning int)
let getbatchjsonsolution = foreign "GRBgetbatchjsonsolution" (ptr grb_Batch @-> ptr string @-> returning int)
let getbatchintattr = foreign "GRBgetbatchintattr" (ptr grb_Batch @-> string @-> ptr int @-> returning int)
let getbatchstrattr = foreign "GRBgetbatchstrattr" (ptr grb_Batch @-> string @-> ptr string @-> returning int)
let getbatchattrname = foreign "GRBgetbatchattrname" (ptr grb_Env @-> int @-> ptr string @-> returning int)
let getbatchattrinfo = foreign "GRBgetbatchattrinfo" (ptr grb_Batch @-> string @-> ptr int @-> ptr int @-> returning int)
let updatebatch = foreign "GRBupdatebatch" (ptr grb_Batch @-> returning int)
let writebatchjsonsolution = foreign "GRBwritebatchjsonsolution" (ptr grb_Batch @-> string @-> returning int)
let getnumbatchattributes = foreign "GRBgetnumbatchattributes" (ptr grb_Env @-> returning int)
let free = foreign "GRBfree" (ptr void @-> returning void)
let sync = foreign "GRBsync" (ptr grb_Model @-> returning int)
let pingserver = foreign "GRBpingserver" (string @-> string @-> returning int)
let prefetchattr = foreign "GRBprefetchattr" (ptr grb_Model @-> string @-> returning int)
end

type grb_error =
  | OUT_OF_MEMORY (** GRB_ERROR_OUT_OF_MEMORY *)
  | NULL_ARGUMENT (** GRB_ERROR_NULL_ARGUMENT *)
  | INVALID_ARGUMENT (** GRB_ERROR_INVALID_ARGUMENT *)
  | UNKNOWN_ATTRIBUTE (** GRB_ERROR_UNKNOWN_ATTRIBUTE *)
  | DATA_NOT_AVAILABLE (** GRB_ERROR_DATA_NOT_AVAILABLE *)
  | INDEX_OUT_OF_RANGE (** GRB_ERROR_INDEX_OUT_OF_RANGE *)
  | UNKNOWN_PARAMETER (** GRB_ERROR_UNKNOWN_PARAMETER *)
  | VALUE_OUT_OF_RANGE (** GRB_ERROR_VALUE_OUT_OF_RANGE *)
  | NO_LICENSE (** GRB_ERROR_NO_LICENSE *)
  | SIZE_LIMIT_EXCEEDED (** GRB_ERROR_SIZE_LIMIT_EXCEEDED *)
  | CALLBACK (** GRB_ERROR_CALLBACK *)
  | FILE_READ (** GRB_ERROR_FILE_READ *)
  | FILE_WRITE (** GRB_ERROR_FILE_WRITE *)
  | NUMERIC (** GRB_ERROR_NUMERIC *)
  | IIS_NOT_INFEASIBLE (** GRB_ERROR_IIS_NOT_INFEASIBLE *)
  | NOT_FOR_MIP (** GRB_ERROR_NOT_FOR_MIP *)
  | OPTIMIZATION_IN_PROGRESS (** GRB_ERROR_OPTIMIZATION_IN_PROGRESS *)
  | DUPLICATES (** GRB_ERROR_DUPLICATES *)
  | NODEFILE (** GRB_ERROR_NODEFILE *)
  | Q_NOT_PSD (** GRB_ERROR_Q_NOT_PSD *)
  | QCP_EQUALITY_CONSTRAINT (** GRB_ERROR_QCP_EQUALITY_CONSTRAINT *)
  | NETWORK (** GRB_ERROR_NETWORK *)
  | JOB_REJECTED (** GRB_ERROR_JOB_REJECTED *)
  | NOT_SUPPORTED (** GRB_ERROR_NOT_SUPPORTED *)
  | EXCEED_2B_NONZEROS (** GRB_ERROR_EXCEED_2B_NONZEROS *)
  | INVALID_PIECEWISE_OBJ (** GRB_ERROR_INVALID_PIECEWISE_OBJ *)
  | UPDATEMODE_CHANGE (** GRB_ERROR_UPDATEMODE_CHANGE *)
  | CLOUD (** GRB_ERROR_CLOUD *)
  | MODEL_MODIFICATION (** GRB_ERROR_MODEL_MODIFICATION *)

module Types(T: Cstubs.Types.TYPE) = struct
  let grb_error_out_of_memory = T.constant "GRB_ERROR_OUT_OF_MEMORY" T.int
  let grb_error_null_argument = T.constant "GRB_ERROR_NULL_ARGUMENT" T.int
  let grb_error_invalid_argument = T.constant "GRB_ERROR_INVALID_ARGUMENT" T.int
  let grb_error_unknown_attribute = T.constant "GRB_ERROR_UNKNOWN_ATTRIBUTE" T.int
  let grb_error_data_not_available = T.constant "GRB_ERROR_DATA_NOT_AVAILABLE" T.int
  let grb_error_index_out_of_range = T.constant "GRB_ERROR_INDEX_OUT_OF_RANGE" T.int
  let grb_error_unknown_parameter = T.constant "GRB_ERROR_UNKNOWN_PARAMETER" T.int
  let grb_error_value_out_of_range = T.constant "GRB_ERROR_VALUE_OUT_OF_RANGE" T.int
  let grb_error_no_license = T.constant "GRB_ERROR_NO_LICENSE" T.int
  let grb_error_size_limit_exceeded = T.constant "GRB_ERROR_SIZE_LIMIT_EXCEEDED" T.int
  let grb_error_callback = T.constant "GRB_ERROR_CALLBACK" T.int
  let grb_error_file_read = T.constant "GRB_ERROR_FILE_READ" T.int
  let grb_error_file_write = T.constant "GRB_ERROR_FILE_WRITE" T.int
  let grb_error_numeric = T.constant "GRB_ERROR_NUMERIC" T.int
  let grb_error_iis_not_infeasible = T.constant "GRB_ERROR_IIS_NOT_INFEASIBLE" T.int
  let grb_error_not_for_mip = T.constant "GRB_ERROR_NOT_FOR_MIP" T.int
  let grb_error_optimization_in_progress = T.constant "GRB_ERROR_OPTIMIZATION_IN_PROGRESS" T.int
  let grb_error_duplicates = T.constant "GRB_ERROR_DUPLICATES" T.int
  let grb_error_nodefile = T.constant "GRB_ERROR_NODEFILE" T.int
  let grb_error_q_not_psd = T.constant "GRB_ERROR_Q_NOT_PSD" T.int
  let grb_error_qcp_equality_constraint = T.constant "GRB_ERROR_QCP_EQUALITY_CONSTRAINT" T.int
  let grb_error_network = T.constant "GRB_ERROR_NETWORK" T.int
  let grb_error_job_rejected = T.constant "GRB_ERROR_JOB_REJECTED" T.int
  let grb_error_not_supported = T.constant "GRB_ERROR_NOT_SUPPORTED" T.int
  let grb_error_exceed_2b_nonzeros = T.constant "GRB_ERROR_EXCEED_2B_NONZEROS" T.int
  let grb_error_invalid_piecewise_obj = T.constant "GRB_ERROR_INVALID_PIECEWISE_OBJ" T.int
  let grb_error_updatemode_change = T.constant "GRB_ERROR_UPDATEMODE_CHANGE" T.int
  let grb_error_cloud = T.constant "GRB_ERROR_CLOUD" T.int
  let grb_error_model_modification = T.constant "GRB_ERROR_MODEL_MODIFICATION" T.int
end
